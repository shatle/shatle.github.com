<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Liu.Shatle]]></title>
  <link href="http://shatle.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://shatle.github.io/"/>
  <updated>2018-02-19T10:17:46+08:00</updated>
  <id>http://shatle.github.io/</id>
  <author>
    <name><![CDATA[liu.shatle &hearts; gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[reset my octopress]]></title>
    <link href="http://shatle.github.io/blog/2014/10/20/reset-my-octopress/"/>
    <updated>2014-10-20T23:07:06+08:00</updated>
    <id>http://shatle.github.io/blog/2014/10/20/reset-my-octopress</id>
    <content type="html"><![CDATA[<p>好久不写东西了，上来看了自己的github，空了好长的时间。</p>

<p>之前电脑重装，之前的项目已经不在了。重新的时候只是将md文件备份，其它的样式都没有备份。所以不得不重新抽时间折腾了。</p>

<p>很简单，直接走octopress的流程就可以了。二货的我（突然想到今天电影《银河战队》的foreigner说二货有点搞，中国市场真心大啊）将github地址搞错了，以为将<code>.git/config</code>的remote改了就可以了，不然，其实要修改的是<code>_deploy/.git/config</code>。下次记住了。</p>

<p>之前正确使用这工具，没有那么傻的事情，突然傻一回，反而搞懂了其大致的原理。</p>

<p>我还对样式进行了修改，最近迷上了紫色，主题颜色打紫了。</p>

<p>充数了，睡觉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[a tip order of git commit file]]></title>
    <link href="http://shatle.github.io/blog/2012/08/20/a-tip-order-of-git-commit-file/"/>
    <updated>2012-08-20T14:46:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/20/a-tip-order-of-git-commit-file</id>
    <content type="html"><![CDATA[<hr />

<h2>git commit的顺序小记</h2>

<hr />

<p>我在本地从master分支中新建了一个关于此模块的分支 <code>test_job</code></p>

<pre><code>git checkout -b test_job
</code></pre>

<p>此命令会自动在本地创建<code>test_job</code>分支，并从本地分支切换到<code>test_job</code>分支的。</p>

<p>然后在此分支上做了许多的工作，当想提交的时候，我想了些。此前并不意识到，可能的与其他代码人员的代码冲突，结果往往另我很伤神。</p>

<p>这次应该多检查一下才行。</p>

<p>首先，查看状态。</p>

<pre><code>git status
</code></pre>

<p>很不幸，其中有一个文件是我没想修改的。但是不知道什么时候，可能是我的原因或者编辑器的原因，对这个文件创造出了修改。这里称此文件为 <code>app/model/other_job_model.rb</code>。</p>

<p>好吧，虽然说，我是不想改这文件的。但是，刚过周末，会不会是上周的一个小需求需要修改此文件，而这周的我忘却了呢？那先具体看看此文件有哪些改动吧。</p>

<pre><code>git diff HEAD -- app/model/other_job_model.rb
</code></pre>

<p>此命令会显示文件<code>app/model/other_job_model.rb</code>最后一次提交与当前代码的区别。这里的最后一次提交应该是从<code>master</code>迁出的最后一次提交。</p>

<blockquote><pre><code>   $ git diff test            (1)
   $ git diff HEAD -- ./test  (2)
   $ git diff HEAD^ HEAD      (3)
</code></pre>

<ol>
<li>Instead of using the tip of the current branch, compare with
the tip of &#8220;test&#8221; branch.</li>
<li>Instead of comparing with the tip of &#8220;test&#8221; branch, compare
with the tip of the current branch, but limit the comparison to
the file &#8220;test&#8221;.</li>
<li>Compare the version before the last commit and the last
commit.</li>
</ol>
</blockquote>

<p>看了之后顿时无语，不知道什么时候手贱，对此文件删除了一空白行。而　git 神经紧张地报告了这一修改。好吧，至少我还是不希望这一修改提交的，虽然对他人的代码的运行不会有问题，但是，未知的东西太多了。我小白无知的太多了，别动他人代码为好。</p>

<pre><code>git checkout -- app/model/other_job_model.rb
</code></pre>

<p>相关语法：</p>

<blockquote><p>git checkout [-p|&#8211;patch] [&lt;tree-ish>] [&#8211;] [&lt;paths>&#8230;]</p></blockquote>

<p>重新查看状态</p>

<pre><code>git status
</code></pre>

<p>好了，此时的文件应该是我自己要修改的文件了。可以提交了。</p>

<pre><code>git add ./  #如果有删除或者更多非添加操作，可以　git add -A
git commit -m "test_job ok"
</code></pre>

<p>好了，此版本不会涉及到他人文件了。现在把此分支提交到远程吧。</p>

<pre><code>git push origin HEAD
</code></pre>

<p>完成，远程会自动创建<code>test_job</code>这一分支并包含刚才push的代码的。</p>
]]></content>
  </entry>
  
</feed>
