<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: work | Liu.Shatle]]></title>
  <link href="http://shatle.github.io/blog/categories/work/atom.xml" rel="self"/>
  <link href="http://shatle.github.io/"/>
  <updated>2020-04-25T13:35:23+08:00</updated>
  <id>http://shatle.github.io/</id>
  <author>
    <name><![CDATA[liu.shatle &hearts; gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gemfile's gem reference with Rails app local]]></title>
    <link href="http://shatle.github.io/blog/2012/08/20/gemfiles-gem-reference-with-rails-app-local/"/>
    <updated>2012-08-20T15:51:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/20/gemfiles-gem-reference-with-rails-app-local</id>
    <content type="html"><![CDATA[<h2>Gemfile引用Rails项目中的gem</h2>

<hr />

<h3>需求</h3>

<p>之前写了个gem，但是不好意思让其他人在他们的机器上安装吧，因为是github上的私密的项目啊。需要下载下来，安装，虽然也不难。唉，废话。</p>

<h3>解决</h3>

<p>将我本地的已经安装好的gem，放到整个rails环境中吧。</p>

<p>解压本地gem到rails项目目录。</p>

<pre><code>gem unpack my-gem --target vendor/gems
</code></pre>

<p>往Gemfile里添加</p>

<pre><code>gem 'my-gem', '0.0.1', :path =&gt; "vendor/gems/my-gem-0.0.1"
</code></pre>

<p>然后, <code>bundle install</code>确认是否成功。</p>

<p>如果，在Gemfile上的版本号不写，或者写<code>&gt;=0.0.1</code>会出现错误。小白我不懂。
解压到本地的gem没有specification文件，不能准确识别版本？可能吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[a tip order of git commit file]]></title>
    <link href="http://shatle.github.io/blog/2012/08/20/a-tip-order-of-git-commit-file/"/>
    <updated>2012-08-20T14:46:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/20/a-tip-order-of-git-commit-file</id>
    <content type="html"><![CDATA[<hr />

<h2>git commit的顺序小记</h2>

<hr />

<p>我在本地从master分支中新建了一个关于此模块的分支 <code>test_job</code></p>

<pre><code>git checkout -b test_job
</code></pre>

<p>此命令会自动在本地创建<code>test_job</code>分支，并从本地分支切换到<code>test_job</code>分支的。</p>

<p>然后在此分支上做了许多的工作，当想提交的时候，我想了些。此前并不意识到，可能的与其他代码人员的代码冲突，结果往往另我很伤神。</p>

<p>这次应该多检查一下才行。</p>

<p>首先，查看状态。</p>

<pre><code>git status
</code></pre>

<p>很不幸，其中有一个文件是我没想修改的。但是不知道什么时候，可能是我的原因或者编辑器的原因，对这个文件创造出了修改。这里称此文件为 <code>app/model/other_job_model.rb</code>。</p>

<p>好吧，虽然说，我是不想改这文件的。但是，刚过周末，会不会是上周的一个小需求需要修改此文件，而这周的我忘却了呢？那先具体看看此文件有哪些改动吧。</p>

<pre><code>git diff HEAD -- app/model/other_job_model.rb
</code></pre>

<p>此命令会显示文件<code>app/model/other_job_model.rb</code>最后一次提交与当前代码的区别。这里的最后一次提交应该是从<code>master</code>迁出的最后一次提交。</p>

<blockquote><pre><code>   $ git diff test            (1)
   $ git diff HEAD -- ./test  (2)
   $ git diff HEAD^ HEAD      (3)
</code></pre>

<ol>
<li>Instead of using the tip of the current branch, compare with
the tip of &#8220;test&#8221; branch.</li>
<li>Instead of comparing with the tip of &#8220;test&#8221; branch, compare
with the tip of the current branch, but limit the comparison to
the file &#8220;test&#8221;.</li>
<li>Compare the version before the last commit and the last
commit.</li>
</ol>
</blockquote>

<p>看了之后顿时无语，不知道什么时候手贱，对此文件删除了一空白行。而　git 神经紧张地报告了这一修改。好吧，至少我还是不希望这一修改提交的，虽然对他人的代码的运行不会有问题，但是，未知的东西太多了。我小白无知的太多了，别动他人代码为好。</p>

<pre><code>git checkout -- app/model/other_job_model.rb
</code></pre>

<p>相关语法：</p>

<blockquote><p>git checkout [-p|&#8211;patch] [&lt;tree-ish>] [&#8211;] [&lt;paths>&#8230;]</p></blockquote>

<p>重新查看状态</p>

<pre><code>git status
</code></pre>

<p>好了，此时的文件应该是我自己要修改的文件了。可以提交了。</p>

<pre><code>git add ./  #如果有删除或者更多非添加操作，可以　git add -A
git commit -m "test_job ok"
</code></pre>

<p>好了，此版本不会涉及到他人文件了。现在把此分支提交到远程吧。</p>

<pre><code>git push origin HEAD
</code></pre>

<p>完成，远程会自动创建<code>test_job</code>这一分支并包含刚才push的代码的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu one记事]]></title>
    <link href="http://shatle.github.io/blog/2012/08/17/ubuntu-one-ji-shi/"/>
    <updated>2012-08-17T21:48:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/17/ubuntu-one-ji-shi</id>
    <content type="html"><![CDATA[<p>前段时间，我不小心从ubuntu one官网上删除了我自己机器上的，于是其只剩下公司电脑了。</p>

<p>回到宿舍想重新添加时，一直不知道怎么办。</p>

<p>有人说，可以从ubuntu one的客户端点击，出网页，会出现添加此设备的按钮，实际上我的没有。</p>

<p>终于方法到了：</p>

<ul>
<li>删除本地的ubuntu one 帐号。</li>
</ul>


<p>打开&#8221;密码与密钥&#8221;程序，在&#8221;密码&#8221;中找到 ubuntu one 的行，右键删除。</p>

<ul>
<li><p>打开终端运行命令。</p>

<pre><code>  u1sdtool -q

  u1sdtool -c
</code></pre></li>
</ul>


<p>重启同步进程。</p>

<ul>
<li>打开ubuntu one的客户端，输入帐号，就没问题。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails lib 文件]]></title>
    <link href="http://shatle.github.io/blog/2012/08/17/rails-lib-wen-jian/"/>
    <updated>2012-08-17T21:42:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/17/rails-lib-wen-jian</id>
    <content type="html"><![CDATA[<p>今天在rails项目中的<code>rails_dir/lib</code>文件夹新建了个文件，当类库使用。</p>

<p>如：my_jobs.rb，内容如下:</p>

<pre><code>module Jobs
  def self.hello
    "hello"
  end
end
</code></pre>

<p>但是，当我用</p>

<pre><code>rails c
</code></pre>

<p>并不能正常加载，不是说rails项目的lib中的文件会自动加载吗？问了旁边的齐洋，哦，要模块名与文件名要同名(符合rails规则)，才能自动加载。</p>

<p>唉，之前都是习惯同名，现在不同名却能发现这一问题。多coding，才能发现问题啊。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[warning: variable  is no longer effective]]></title>
    <link href="http://shatle.github.io/blog/2012/08/17/warning-variable-is-no-longer-effective/"/>
    <updated>2012-08-17T21:40:00+08:00</updated>
    <id>http://shatle.github.io/blog/2012/08/17/warning-variable-is-no-longer-effective</id>
    <content type="html"><![CDATA[<pre><code>gems/soap4r-1.5.8/lib/xsd/charset.rb:13: warning: variable $KCODE is no longer effective
</code></pre>

<p>在stackoverflow上找到了解决这一问题的方法：</p>

<pre><code>http://stackoverflow.com/questions/5754965/ruby-soap4r-wsdl2ruby-rb-errors
</code></pre>

<p>即，修改文件：gems/soap4r-1.5.8/lib/xsd/xmlparser.rb的第66行，</p>

<pre><code>c.downcase == name
</code></pre>

<p>为</p>

<pre><code>c.to_s.downcase == name
</code></pre>
]]></content>
  </entry>
  
</feed>
